-- LF5 Flashcards
BEGIN TRANSACTION;
DELETE FROM flashcards WHERE unit_id BETWEEN 5801 AND 5807;
INSERT INTO flashcards(unit_id,question,answer,difficulty) VALUES
-- 5801 Umfeld der Softwareentwicklung analysieren
(5801,'Welche Rollen gibt es in der Softwareentwicklung?','Frontend, Backend, Full-Stack, Mobile, DevOps, Embedded, Datenbank.',2),
(5801,'Was macht ein Frontend-Entwickler?','Gestaltet Benutzeroberflächen.',1),
(5801,'Was macht ein Backend-Entwickler?','Implementiert Logik und Datenbankzugriff.',1),
(5801,'Was ist ein Full-Stack-Entwickler?','Arbeitet im Frontend und Backend.',1),
(5801,'Welche Softwarearten gibt es?','System-, Anwendungs-, Unterstützungssoftware.',1),
(5801,'Unterschied Standard- vs. Individualsoftware?','Standard: allgemein nutzbar; Individual: maßgeschneidert.',2),
(5801,'Was bedeutet Customizing?','Anpassung von Standardsoftware.',1),
(5801,'Was bedeutet Erweiterungsprogrammierung?','Neue Funktionen ergänzen.',1),
(5801,'Was beschreibt der Softwarelebenszyklus?','Planung → Entwicklung → Test → Betrieb → Wartung.',1),
(5801,'Welche Kompetenzen sind wichtig?','Fachlich (Sprachen, Algorithmen) + Sozial (Team, Kommunikation).',2),
-- 5802 Grundlagen Datenverwaltung
(5802,'Unterschied Daten vs. Informationen?','Daten = Rohwerte; Information = Daten mit Kontext.',1),
(5802,'Was ist das EVA-Prinzip?','Eingabe, Verarbeitung, Ausgabe.',1),
(5802,'Basis 10 heißt?','Dezimalsystem.',1),
(5802,'Basis 2 heißt?','Binärsystem.',1),
(5802,'Basis 16 heißt?','Hexadezimalsystem.',1),
(5802,'Beispiel ASCII?','A = 65.',1),
(5802,'Beispiel Unicode?','UTF-8 unterstützt viele Sprachen.',1),
(5802,'Raster vs. Vektorgrafik?','Raster=Pixel; Vektor=Formen.',2),
(5802,'Warum Datenschutz?','Schutz personenbezogener Daten.',1),
(5802,'Was bedeutet Datensicherheit?','Schutz vor Verlust, Manipulation, Zugriff.',2),
-- 5803 Grundlagen Softwareentwicklung
(5803,'Was ist ein Vorgehensmodell?','Strukturierter Entwicklungsablauf.',1),
(5803,'Lineares Modell Beispiel?','Wasserfall.',1),
(5803,'Testorientiertes Modell?','V-Modell.',1),
(5803,'Agiles Modell Beispiel?','Scrum oder Kanban.',1),
(5803,'Was ist ein Paradigma?','Grundidee einer Programmiersprache.',2),
(5803,'Imperatives Paradigma?','Schrittweise Anweisungen.',1),
(5803,'Objektorientiertes Paradigma?','Klassen und Objekte.',1),
(5803,'Funktionales Paradigma?','Funktionen ohne Zustandsänderung.',2),
(5803,'Was macht ein Compiler?','Übersetzt Quellcode in Maschinencode.',1),
(5803,'Was macht ein Interpreter?','Führt Quellcode direkt aus.',1),
(5803,'Zweck von Debugging?','Fehler finden und beheben.',1),
(5803,'Warum Dokumentation?','Verständlichkeit & Wartbarkeit.',2),
-- 5804 Einfache Anwendungen programmieren
(5804,'Was ist ein Algorithmus?','Schritt-für-Schritt-Anleitung.',1),
(5804,'Was sind Variablen?','Speicher für Werte.',1),
(5804,'Beispiele Datentypen?','Integer, Float, String, Boolean.',1),
(5804,'Was machen Operatoren?','Rechnen, Vergleichen, Logik.',1),
(5804,'Was ist eine if-Abfrage?','Bedingte Ausführung.',1),
(5804,'Was ist eine Schleife?','Wiederholt Anweisungen.',1),
(5804,'for vs. while?','for: definierte Zählung; while: Bedingung.',2),
(5804,'Was ist Modularisierung?','Aufteilen in Funktionen/Methoden.',1),
(5804,'Beispiel Eingabe/Ausgabe?','Tastatur und Monitor.',1),
(5804,'Was ist Fehlerbehandlung?','Umgang mit Ausnahmen (try/catch).',2),
-- 5805 Dateiverwaltung
(5805,'Vorteil TXT?','Einfach & universell lesbar.',1),
(5805,'Nachteil TXT?','Unstrukturiert.',1),
(5805,'Vorteil CSV?','Tabellarisch, leicht importierbar.',1),
(5805,'Nachteil CSV?','Keine Hierarchien.',1),
(5805,'Vorteil XML?','Flexibel & strukturiert.',1),
(5805,'Nachteil XML?','Größer/aufwendig.',2),
(5805,'Vorteil JSON?','Leichtgewichtig, Web-freundlich.',1),
(5805,'Nachteil JSON?','Weniger für sehr komplexe Daten.',2),
(5805,'Wie Datei einlesen?','Zeilenweise öffnen.',1),
(5805,'Wie Datei schreiben?','Append oder Overwrite.',1),
-- 5806 Datenbanken
(5806,'Datei vs. Datenbank?','Datei unstrukturiert; DB strukturiert.',2),
(5806,'Was ist relationale DB?','Tabellen mit Relationen & Schlüsseln.',1),
(5806,'Was ist Normalisierung?','Redundanz vermeiden.',1),
(5806,'SQL CREATE?','Tabelle erstellen.',1),
(5806,'SQL INSERT?','Daten einfügen.',1),
(5806,'SQL SELECT?','Daten lesen.',1),
(5806,'SQL UPDATE?','Daten ändern.',1),
(5806,'SQL DELETE?','Daten löschen.',1),
(5806,'Was ist CRUD?','Create, Read, Update, Delete.',1),
(5806,'Vorteil relationale DB?','Konsistenz & Verknüpfungen.',2),
-- 5807 Testen & Dokumentieren
(5807,'Was ist Unit-Test?','Test einzelnes Modul.',1),
(5807,'Integrationstest?','Zusammenspiel von Modulen.',1),
(5807,'Systemtest?','Test des Gesamtsystems.',1),
(5807,'Akzeptanztest?','Prüfung durch Kunden.',1),
(5807,'Blackbox vs. Whitebox?','Externes Verhalten vs. interne Logik.',2),
(5807,'Beispiel Blackbox-Test?','Passwortfeld prüfen.',1),
(5807,'Beispiel Whitebox-Test?','Schleifenlogik prüfen.',1),
(5807,'Was ist Debugging?','Fehler suchen & beheben.',1),
(5807,'Dokumentationsarten?','Entwickler- & Anwenderdoku.',1),
(5807,'Ziel der Dokumentation?','Verständlichkeit, Schulung, Wartung.',2);
COMMIT;
